dependencies {
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "org.apache.commons:commons-pool2:${poolVersion}"
    implementation "commons-beanutils:commons-beanutils:${beanutilsVersion}"
    implementation "javax.interceptor:javax.interceptor-api:${javaxInterceptorVersion}"
    implementation "com.alibaba:easyexcel:${easyexcelVersion}"
    implementation "org.mariadb.jdbc:mariadb-java-client:${mariadbVersion}"
    implementation "com.vladmihalcea:hibernate-types-52:${hibernateTypeVersion}"
    implementation "org.apache.poi:poi-ooxml:${poiVersion}"
    implementation "org.apache.poi:poi-scratchpad:${poiVersion}"
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    implementation "com.sun.mail:javax.mail:${javaMailVersion}"

    /** lombok依赖 */
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    implementation "com.belerweb:pinyin4j:${pinyin4jVersion}"

    /** springboot */
    implementation ('org.springframework.boot:spring-boot-starter-web',
                    'org.springframework.boot:spring-boot-starter-actuator',
                    'org.springframework.boot:spring-boot-starter-validation',
                    'org.springframework.boot:spring-boot-starter-data-redis',
                    'org.springframework.boot:spring-boot-configuration-processor',
                    'org.springframework.boot:spring-boot-starter-data-jpa',
                    'org.springframework.boot:spring-boot-starter-data-mongodb',
                    'org.springframework.boot:spring-boot-starter-log4j2',
                    'org.springframework.boot:spring-boot-starter-security')


    runtimeOnly "org.springframework.boot:spring-boot-devtools"
    implementation "com.alibaba:druid-spring-boot-starter:${druidVersion}"
    implementation "org.apache.cxf:cxf-spring-boot-starter-jaxws:${cxfVersion}"
    implementation "de.codecentric:spring-boot-admin-starter-client:${springBootAdminVersion}"
    implementation "com.github.ulisesbocchio:jasypt-spring-boot-starter:${jasyptVersion}"
    implementation "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springbootVersion}"

    /** spring cloud */
    implementation ('org.springframework.cloud:spring-cloud-starter',
                    'org.springframework.cloud:spring-cloud-starter-netflix-ribbon',
                    'org.springframework.cloud:spring-cloud-starter-openfeign',
                    'org.springframework.cloud:spring-cloud-starter-netflix-hystrix')

    /** alibaba-cloud */
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config:${springAlibabaVersion}"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:${springAlibabaVersion}"

    /** test */
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        //springboot 升级2.2 以后test 需要排除junit-vintage-engine
        exclude(group: 'org.junit.vintage', module: "junit-vintage-engine")
    }
    /** junit5 */
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"

    /** Only needed to run tests in a version of IntelliJ IDEA that bundles older versions */
    testRuntimeOnly ("org.junit.platform:junit-platform-launcher:1.5.2")
    // testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

    /** lombok test */
    testImplementation "org.jmockit:jmockit:${jmockitVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springAlibabaVersion}"
    }
}